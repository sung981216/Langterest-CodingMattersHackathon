{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Interest.js","components/InterestFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","routes/About.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onChange","target","name","value","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","FacebookAuthProvider","GithubAuthProvider","signInWithPopup","src","alt","style","width","paddingBottom","icon","faGoogle","faFacebook","faGithub","Interest","interestObj","isOwner","editing","setEditing","text","newInterest","setNewInterest","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","creatorName","fontWeight","paddingTop","class","faTrash","faPencilAlt","InterestFactory","userObj","interest","setInterest","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","interestObject","createdAt","Date","now","creatorId","displayName","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","interests","setInterests","useEffect","orderBy","onSnapshot","snapshot","interestArray","docs","map","marginTop","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","flexDirection","alignItems","fontSize","faHome","color","size","marginLeft","faUser","faUsers","About","borderRadius","textAlign","lineHeight","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9540b4a6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // Create Account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // Log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n  faFacebook,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n\r\n    let provider;\r\n\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"facebook\") {\r\n      provider = new firebaseInstance.auth.FacebookAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <img\r\n        className=\"logo\"\r\n        src=\"/public/images/logo.png\"\r\n        alt=\"logo\"\r\n        style={{\r\n          width: 425,\r\n          paddingBottom: 70,\r\n        }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button name=\"facebook\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Facebook <FontAwesomeIcon icon={faFacebook} />\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Interest = ({ interestObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newInterest, setNewInterest] = useState(interestObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this post?\");\r\n    if (ok) {\r\n      // Delete the post\r\n      await dbService.doc(`interest/${interestObj.id}`).delete();\r\n      await storageService.refFromURL(interestObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`interest/${interestObj.id}`).update({\r\n      text: newInterest,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewInterest(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your post\"\r\n                  value={newInterest}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Post\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {interestObj.creatorName && (\r\n            <h4 style={{ fontWeight: \"bold\" }}>{interestObj.creatorName}</h4>\r\n          )}\r\n\r\n          <h4\r\n            style={{\r\n              paddingTop: 20,\r\n            }}\r\n          >\r\n            {interestObj.text}\r\n          </h4>\r\n          {interestObj.attachmentUrl && (\r\n            <img src={interestObj.attachmentUrl} alt=\"newPost\" />\r\n          )}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Interest;\r\n","import React, { useState } from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst InterestFactory = ({ userObj }) => {\r\n  const [interest, setInterest] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (interest === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const interestObject = {\r\n      text: interest,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      creatorName: userObj.displayName,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"interest\").add(interestObject);\r\n    setInterest(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setInterest(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachmentClick = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          type=\"text\"\r\n          value={interest}\r\n          onChange={onChange}\r\n          placeholder=\"What's going on in Langley?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InterestFactory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Interest from \"components/Interest\";\r\nimport InterestFactory from \"components/InterestFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [interests, setInterests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"interest\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const interestArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setInterests(interestArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <InterestFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {interests.map((interest) => (\r\n          <Interest\r\n            key={interest.id}\r\n            interestObj={interest}\r\n            isOwner={interest.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          autoFocus\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faHome, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            marginRight: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faHome} color={\"#97bc62ff\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>Home</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#97bc62ff\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}'s Profile`\r\n              : \"My Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/about\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUsers} color={\"#97bc62ff\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>About Us</span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src=\"/public/images/sung.jpg\"\r\n        alt=\"face\"\r\n        style={{\r\n          width: 200,\r\n          borderRadius: \"50%\",\r\n          display: \"block\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          display: \"block\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          textAlign: \"center\",\r\n          paddingTop: 50,\r\n          fontSize: \"20px\",\r\n          width: \"70%\",\r\n          lineHeight: 1.5,\r\n        }}\r\n      >\r\n        <h5>\r\n          Hello everyone! My name is Sung Na and this is my Hackathon project\r\n          for the Township of Langley called Langterest!. The reason I created\r\n          Langterest was to build an interactive online tool for community\r\n          members to share their great experiences about the city of Langley.\r\n          This will not only be a platform to share our experiences, but to also\r\n          spread awarness about the cultural heritage of the First Nations that\r\n          is related to this great city.\r\n        </h5>\r\n\r\n        <h5 style={{ paddingTop: 40 }}>\r\n          I'm currently in my last term as a Computer Systems Technology student\r\n          at British Columbia Institude of Technology. I'm currently in an\r\n          option called Informations Systems which is about building full-stack\r\n          applications required by medium and large businesses. Web Development\r\n          is something I am very passionate about and my goal is to become a\r\n          front-end developer after graduating from the program.\r\n        </h5>\r\n\r\n        <h5 style={{ paddingTop: 40 }}>\r\n          Thank you for checking out my CodingMatters Hackathon Project!\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nimport About from \"routes/About\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Route exact path=\"/about\">\r\n              <About />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    // Listens for the change of the state (Create Account, Login, or logged in but waiting for firebase to initialize)\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj(user);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}